"""Add username to User

Revision ID: eaef2711d49f
Revises: 
Create Date: 2024-12-02 12:56:40.152667

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eaef2711d49f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    """
    conn = op.get_bind()
    inspector = reflection.Inspector.from_engine(conn)
    columns = [col["name"] for col in inspector.get_columns("user")]

    # Add role column if it doesn't exist
    if "role" not in columns:
        with op.batch_alter_table('user', schema=None) as batch_op:
            batch_op.add_column(sa.Column('role', sa.String(), nullable=True))  # Temporary allow nulls

    # Create an admin user if none exists
    result = conn.execute(text("SELECT * FROM user WHERE role = 'admin'"))
    admin_exists = result.fetchone() is not None
    
    if not admin_exists:
        # Create the admin user with a specific email and password
        admin_email = "admin@example.com"
        admin_password = "adminpassword"  # Use a hashed password in production
        conn.execute(
            text("INSERT INTO user (email, password, role) VALUES (:email, :password, :role)"),
            {"email": admin_email, "password": admin_password, "role": "admin"}
        )
        """
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(), nullable=True))  # Step 1: Allow nulls temporarily

    # Step 2: Populate the `username` column with default or computed values
    op.execute("UPDATE user SET username = email")  # Example: Use email as a default username
    
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('username', nullable=False)  # Step 3: Enforce NOT NULL constraint
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('username')

    # ### end Alembic commands ###
